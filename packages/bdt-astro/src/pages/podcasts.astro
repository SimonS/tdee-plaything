---
import BaseLayout from "../layouts/BaseLayout.astro";
import Pagination from "@components/pagination/pagination.tsx";
import Calendar from "@components/visualisations/calendar.tsx";
import { PodcastEntry } from "../components/PodcastEntry.tsx";

import getPodcasts from "@podcast-fetcher/getPodcasts.ts";
import getAllPodcasts, {
  groupPodcastsByDate,
  aggregatePodcasts,
} from "@podcast-fetcher/getAllPodcasts.ts";

const { podcasts, meta } = await getPodcasts();

const allPodcasts = await getAllPodcasts();
const grouped = groupPodcastsByDate(allPodcasts);
const data = aggregatePodcasts(grouped);

const from = data[0].day;
const to = data[data.length - 1].day;
---

<BaseLayout title="Podcasts I've been listening to">
  <div class="stack listing">
    <h1>Podcasts</h1>
    <div class="content">
      <Calendar client:load data={data} from={from} to={to} />
      <p>
        These are the podcasts I've recently heard, it's all aggregated from <a
          href="https://overcast.fm"
          >Overcast
        </a>.
      </p>
    </div>
    {podcasts.map((podcast) => <PodcastEntry podcast={podcast} />)}
    <Pagination
      tag={`a`}
      pageNumber={1}
      urlRoot={`/podcasts/page`}
      pageInfo={{
        hasNextPage: meta.hasNextPage,
        hasPreviousPage: meta.hasPreviousPage,
      }}
    />
  </div>
</BaseLayout>
